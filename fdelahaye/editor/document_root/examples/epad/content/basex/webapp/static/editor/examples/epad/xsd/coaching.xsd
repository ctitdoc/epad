<?xml version="1.0" encoding="utf-8" ?>
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- elements -->
  <xs:element name="practices" type="practices.type"/>

  <xs:element name="dictionary" type="dictionary.type"/>

  <xs:element name="document" type="document.type"/>

  <xs:element name="meta" type="meta.type"/>

  <xs:element name="author" type="author.type"/>

  <xs:element name="date" type="xs:date"/>

  <xs:element name="categories" type="categories.type"/>

  <xs:element name="category" type="category.type"/>

  <xs:element name="section" type="section.type"/>
  <xs:element name="practice" type="practice.type"/>
  <xs:element name="data_definition" type="data_definition.type"/>
  <xs:element name="data_constraints_definition" type="data_constraints_definition.type"/>
  <xs:element name="data_constraint_definition" type="data_constraint_definition.type"/>
  <xs:element name="property_definition" type="property_definition.type"/>
  <xs:element name="property_constraints_definition" type="property_constraints_definition.type"/>
  <xs:element name="h" type="plaintext.type"/>

  <xs:element name="h-sub" type="plaintext.type"/>

  <xs:element name="p" substitutionGroup="abstract-block" type="paragraph.type"/>

  <xs:element name="code" substitutionGroup="abstract-block" type="code.type" xml:space="preserve"/>

  <xs:element name="technical_restriction" substitutionGroup="abstract-block" type="paragraph.type"/>

  <xs:element name="body" type="paragraph.type"/>

  <xs:element name="source" type="plaintext.type"/>

  <xs:element name="a" substitutionGroup="abstract-plaintextelement" type="hyperlink.type"/>

  <xs:element name="br" substitutionGroup="abstract-richtextelement" type="empty.type"/>

  <xs:element name="strong" substitutionGroup="abstract-richtextelement" type="richtext.type"/>

  <xs:element name="em" substitutionGroup="abstract-richtextelement" type="richtext.type"/>

  <xs:element name="note" substitutionGroup="abstract-richtextelement" type="notetext.type"/>

  <xs:element name="u" substitutionGroup="abstract-richtextelement" type="richtext.type"/>

  <xs:element name="sub" substitutionGroup="abstract-plaintextelement" type="plaintext.type"/>

  <xs:element name="sup" substitutionGroup="abstract-plaintextelement" type="plaintext.type"/>

  <xs:element name="table" substitutionGroup="abstract-block" type="tableType" />

  <xs:element name="ul" substitutionGroup="abstract-block" type="list.type"/>

  <xs:element name="ol" substitutionGroup="abstract-block" type="list.type"/>

  <xs:element name="li" type="li.type"/>

  <xs:element name="figure" substitutionGroup="abstract-block" type="figure.type"/>

  <xs:element name="img" substitutionGroup="abstract-media" type="media.type"/>

  <xs:element name="video" substitutionGroup="abstract-media" type="media.type"/>

  <xs:element name="legend" type="richtext.type"/>

  <xs:element name="quote" substitutionGroup="abstract-block" type="quote.type"/>

  <xs:element name="orgchart" substitutionGroup="abstract-media">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="person" minOccurs="1"/>
      </xs:sequence>
      <xs:attribute ref="width" use="optional" />
      <xs:attribute ref="border-type" use="optional" />
      <xs:attribute ref="ignore_for"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="person">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="person" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" use="required" type="nonEmptyString"/>
      <xs:attribute ref="email" use="optional"/>
      <xs:attribute name="division" use="optional" type="xs:string"/>
      <xs:attribute ref="ignore_for"/>
    </xs:complexType>
  </xs:element>


  <xs:element name="include" substitutionGroup="abstract-block">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="media.type">
          <xs:sequence>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <!-- types and abstracts -->

  <xs:element name="abstract-block"            abstract="true"/>
  <xs:element name="abstract-plaintextelement" abstract="true"/>
  <xs:element name="abstract-richtextelement"  abstract="true"/>
  <xs:element name="abstract-media"            abstract="true"/>

  <!-- empty.type -->
  <xs:complexType name="empty.type" mixed="false">
    <xs:choice minOccurs="0"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- plaintext.type -->
  <xs:complexType name="notetext.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
    </xs:choice>
    <xs:attribute name="view" use="optional" default="default" type="noteview.type"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>
  
  <xs:complexType name="plaintext.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
    </xs:choice>
    <xs:attribute ref="text-align" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- richtext.type -->
  <xs:complexType name="richtext.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
      <xs:element ref="abstract-richtextelement"/>
    </xs:choice>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- hyperlink.type -->
  <xs:complexType name="hyperlink.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
    </xs:choice>
    <xs:attribute ref="href" use="required"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- paragraph.type -->
  <xs:complexType name="paragraph.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
      <xs:element ref="abstract-richtextelement"/>
    </xs:choice>
    <xs:attribute ref="text-align"   use="optional" />
    <!--    <xs:attribute ref="left-indent"  use="optional" default="0" /> -->
    <!--    <xs:attribute ref="right-indent" use="optional" default="0" /> -->
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- code.type -->
  <xs:complexType name="code.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="br"/>
    </xs:choice>
    <xs:attribute ref="text-align"   use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- figure.type -->
  <xs:complexType name="figure.type" mixed="false">
    <xs:sequence>
      <xs:element ref="abstract-media" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element ref="legend" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute ref="align"        use="optional" />
    <!--    <xs:attribute ref="left-indent"  use="optional" default="0" /> -->
    <!--    <xs:attribute ref="right-indent" use="optional" default="0" /> -->
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- media.type -->
  <xs:complexType name="media.type" mixed="false">
    <xs:attribute ref="border-type" use="optional" />
    <xs:attribute ref="src" use="required" />
    <xs:attribute ref="width" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- epad.type -->
  <xs:complexType name="practices.type" mixed="false">
    <xs:sequence>
      <xs:element ref="meta" minOccurs="0"/>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <xs:element ref="abstract-block" minOccurs="0" maxOccurs="unbounded" />
      <xs:element ref="practice" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="section-numbering" use="optional" />
    <xs:attribute ref="figure-numbering" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="dictionary.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <xs:element ref="abstract-block" minOccurs="0" maxOccurs="unbounded" />
      <xs:element ref="data_definition" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="section-numbering" use="optional" />
    <xs:attribute ref="figure-numbering" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="document.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
        <xs:element ref="section" />
      </xs:choice>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute ref="section-numbering" use="optional" />
    <xs:attribute ref="figure-numbering" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- section.type -->
  <xs:complexType name="section.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
        <xs:element ref="section" />
      </xs:choice>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="normal"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="id" use="optional"/>
    <xs:attribute ref="coex" use="optional"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- dataset_definition.type -->
  <xs:complexType name="practice.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <xs:element ref="categories" minOccurs="1" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
        <xs:element ref="section" />
      </xs:choice>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="normal"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="data_definition.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
      </xs:choice>
      <xs:element ref="data_constraints_definition" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="list"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="managed" use="required" default="true"/>
    <xs:attribute ref="id" use="required"/>
    <xs:attribute ref="implementation_class" use="optional"/>
    <xs:attribute ref="implementation_method" use="optional"/>
    <xs:attribute ref="symfony_service_id" use="optional"/>
    <xs:attribute ref="gitlab_repository" use="optional"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="data_constraints_definition.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
        <xs:element ref="data_constraint_definition" />
      </xs:choice>
      <xs:element ref="data_constraint_definition" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="normal"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="managed" use="optional" default="false"/>
    <xs:attribute ref="switch" use="optional" default="none"/>
    <xs:attribute ref="id" use="optional"/>
    <xs:attribute ref="implementation_class" use="optional"/>
    <xs:attribute ref="implementation_method" use="optional"/>
    <xs:attribute ref="symfony_service_id" use="optional"/>
    <xs:attribute ref="gitlab_repository" use="optional"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="data_constraint_definition.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="list"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="managed" use="required" default="true"/>
    <xs:attribute ref="id" use="required"/>
    <xs:attribute ref="switch" use="optional" default="none"/>
    <xs:attribute ref="implementation_class" use="optional"/>
    <xs:attribute ref="implementation_method" use="optional"/>
    <xs:attribute ref="symfony_service_id" use="optional"/>
    <xs:attribute ref="gitlab_repository" use="optional"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="property_definition.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
      </xs:choice>
      <xs:element ref="property_constraints_definition" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="normal"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="property_constraints_definition.type" mixed="false">
    <xs:sequence>
      <xs:element ref="h"    />
      <xs:element ref="h-sub" minOccurs="0" maxOccurs="1" />
      <!-- At least 1 block or section and all blocks precede sections. -->
      <xs:choice>
        <xs:element ref="abstract-block" maxOccurs="unbounded" />
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="view" use="optional" default="normal"/>
    <xs:attribute ref="behavior" use="optional" default="section"/>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- meta.type -->
  <xs:complexType name="meta.type" mixed="false">
    <xs:sequence>
      <xs:element ref="author" minOccurs="0" maxOccurs="1"/>
      <xs:element ref="date" minOccurs="0" maxOccurs="1" />
      <xs:element ref="categories" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- categories.type -->
  <xs:complexType name="categories.type" mixed="false">
    <xs:sequence>
      <xs:element ref="category" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- category.type -->
  <xs:simpleType name="category.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Analysis" id="analysis"/>
      <xs:enumeration value="Bug analysis" id="bug_analysis"/>
      <xs:enumeration value="Evolution analysis" id="evolution_analysis"/>
      <xs:enumeration value="Solution business design" id="solution_business_design"/>
      <xs:enumeration value="Solution technical design" id="solution_technical_design"/>
      <xs:enumeration value="Solution dev" id="solution_dev"/>
      <xs:enumeration value="Solution test" id="solution_test"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- author.type -->
  <xs:complexType name="author.type" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="abstract-plaintextelement"/>
    </xs:choice>
    <xs:attribute ref="email" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- attribute type -->
  <xs:simpleType name="nonEmptyString">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- border-type -->
  <xs:simpleType name="border-type.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="solid"/>
      <xs:enumeration value="smooth"/>
      <xs:enumeration value="soft"/>
      <xs:enumeration value="hard"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="view.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="list"/>
      <xs:enumeration value="accordion"/>
      <xs:enumeration value="tabs"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="behavior.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="section"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="noteview.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="default"/>
      <xs:enumeration value="below-paragraph"/>
      <xs:enumeration value="below-epad"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="list.type" mixed="false">
    <xs:sequence>
      <xs:element ref="li"  maxOccurs="unbounded"/>
    </xs:sequence>
    <!--xs:attribute ref="column-count" use="optional" /-->
    <xs:attribute ref="border-type" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="li.type" mixed="false">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="p"/>
        <xs:element ref="technical_restriction"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element ref="ul" />
        <xs:element ref="ol" />
      </xs:choice>
    </xs:sequence>
    <!--xs:attribute ref="column-count" use="optional" /-->
    <xs:attribute ref="crossed" use="optional" />
    <xs:attribute ref="status" use="optional" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <!-- quote.type -->
  <xs:complexType name="quote.type" mixed="false">
    <xs:sequence>
      <xs:element ref="body"/>
      <xs:element ref="source" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>
  
  <xs:simpleType name="text-align.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="center"/>
      <xs:enumeration value="right"/>
      <xs:enumeration value="justify"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="align.type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="right"/>
      <xs:enumeration value="center"/>
    </xs:restriction>
  </xs:simpleType>
  
  <!-- table type-->

  <xs:complexType name="tableType">
    <xs:sequence>
      <xs:element name="caption" type="xs:string" minOccurs="0" />
      <xs:element name="tbody" type="tbodyType" />
    </xs:sequence>
    <xs:attribute name="width" type="xs:positiveInteger" />
    <xs:attribute name="border" type="borderType" default="cell" />
    <xs:attribute name="color" type="colorSchemesType" default="grey" />
    <xs:attribute name="alternaterowcolor" type="xs:boolean" default="false" />
    <xs:attribute name="cellspacing" type="xs:nonNegativeInteger" default="0" />
    <xs:attribute name="cellpadding" default="1">
      <xs:simpleType>
        <xs:restriction base="xs:nonNegativeInteger">
          <xs:maxInclusive value="32"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="align" type="align.type" default="center" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="tbodyType">
    <xs:sequence>
      <xs:element name="tr" type="trType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="trType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="td" type="tdType" />
      <xs:element name="th" type="tdType" />
    </xs:choice>
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:complexType name="tdType">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="abstract-block" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="colspan" type="xs:positiveInteger" />
    <xs:attribute name="rowspan" type="xs:positiveInteger" />
    <xs:attribute ref="ignore_for"/>
  </xs:complexType>

  <xs:simpleType name="borderType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="no" />
      <xs:enumeration value="row" />
      <xs:enumeration value="column" />
      <xs:enumeration value="cell" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="colorSchemesType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="blue" />
      <xs:enumeration value="green" />
      <xs:enumeration value="orange" />
      <xs:enumeration value="grey" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="alignType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left" />
      <xs:enumeration value="center" />
      <xs:enumeration value="right" />
      <xs:enumeration value="justify" />
    </xs:restriction>
  </xs:simpleType>


  <!-- attributes -->
  <xs:attribute name="href">
    <xs:simpleType>
      <xs:restriction base="xs:anyURI">
        <xs:minLength value="1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>

  <xs:attribute name="src" type="xs:anyURI"/>

  <xs:attribute name="width">
    <xs:simpleType>
      <xs:restriction base="xs:positiveInteger">
        <xs:maxExclusive value="10001"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>

  <xs:attribute name="section-numbering" type="xs:boolean"/>

  <xs:attribute name="figure-numbering" type="xs:boolean"/>

  <xs:attribute name="email" type="xs:string"/>

  <xs:attribute name="view" type="view.type"/>

  <xs:attribute name="behavior" type="behavior.type"/>

  <xs:attribute name="managed" type="xs:boolean"/>

  <xs:attribute name="switch">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="none"/>
        <xs:enumeration value="enabled"/>
        <xs:enumeration value="disabled"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>


  <xs:attribute name="id" type="xs:ID"/>
  <!-- label displayed in place of a collapsed element (like collapsed section ) -->
  <xs:attribute name="coex" type="xs:string"/>

  <xs:attribute name="implementation_class" type="xs:string"/>
  <xs:attribute name="implementation_method" type="xs:string"/>
  <xs:attribute name="symfony_service_id" type="xs:string"/>
  <xs:attribute name="gitlab_repository" type="xs:string"/>


  <xs:attribute name="border-type" type="border-type.type"/>

  <xs:attribute name="text-align" type="text-align.type"/>

  <xs:attribute name="align" type="align.type"/>

  <!-- crossed :  flag telling the content is "crossed", for example on order list items, it tells that this item is
  "crossed" : if this item is a task list item, then this means this task is done;
  so the fact that this attribute exists or not means something whatever its value is.
  -->
  <xs:attribute name="crossed" type="xs:string"/>

  <!-- status :  flag telling the content is a "status", for example in order list items like a task list items,
  it tells that this item is a status of a task parent item;
  so the fact that this attribute exists or not means something whatever its value is. -->
  <xs:attribute name="status" type="xs:string"/>

  <!-- if a value is set, as a blank sepated list of "codes", then its element is ignored if
  one of this codes is within the blank separated list of codes, of the "ignore" parameter passed to the stylesheet.
  This implements an applicability mechanism, example for a resume document:
  - suppose you want to manage resumes for different target jobs: "web developper", "dev lead" or "jobAtDisneyOffer";
  - the you want to ignore the element of your CV that don't apply to one of, or some of, them, by setting the ignore_for
  attribute value to one of, or some of, them : example : the ignore_for value " dev_lead jobAtDisneyOffer " tells that this
  element should be ignored for "web developper" and "jobAtDisneyOffer" target jobs;
  - if the stylesheet is called to deliver the resume for a "web developper" job, then it will be called
  with a "ignore" parameter value " dev_lead jobAtDisneyOffer ", so this element will not appear in the delivered resume.
  -->

  <xs:attribute name="ignore_for" type="xs:string"/>
</xs:schema>
